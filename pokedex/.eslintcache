[{"C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\index.js":"1","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\componentes\\router.js":"2","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\Screens\\home.js":"3","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\Screens\\details.js":"4","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\global\\globalState.js":"5","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\componentes\\cardComponent.js":"6","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\componentes\\Header\\Header.js":"7","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\Screens\\pokedex.js":"8"},{"size":517,"mtime":1606489245544,"results":"9","hashOfConfig":"10"},{"size":1307,"mtime":1606489245539,"results":"11","hashOfConfig":"10"},{"size":894,"mtime":1606490146162,"results":"12","hashOfConfig":"10"},{"size":3097,"mtime":1606495400267,"results":"13","hashOfConfig":"10"},{"size":694,"mtime":1606490085464,"results":"14","hashOfConfig":"10"},{"size":6711,"mtime":1606490155763,"results":"15","hashOfConfig":"10"},{"size":1376,"mtime":1606494678242,"results":"16","hashOfConfig":"10"},{"size":607,"mtime":1606489585679,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"cjomd1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\index.js",[],["38","39"],"C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\componentes\\router.js",["40","41"],"C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\Screens\\home.js",["42","43"],"import React, {useState, useEffect, useContext} from \"react\"\r\nimport Header from '../componentes/Header/Header'\r\nimport GlobalStateContext from \"../global/globalStateContext\"\r\nimport axios from \"axios\"\r\nimport CardComponent from \"../componentes/cardComponent\"\r\n\r\nfunction Home() {\r\n  const {states, setters} = useContext(GlobalStateContext)\r\n \r\n  useEffect(()=>{\r\n\r\n    if(states.listPokedex.length===0) {\r\n      axios.get(\"https://pokeapi.co/api/v2/pokemon/\").then(response =>{\r\n        setters.setListaPokemon(response.data.results)\r\n      })\r\n    }\r\n  },[])\r\n\r\n\r\n \r\n  return (\r\n     <div>\r\n\r\n      <Header/>\r\n      {states.listaPokemon &&\r\n        states.listaPokemon.map((pokemon)=> {\r\n          return (\r\n            <CardComponent key={pokemon.name} url={pokemon.url} name={pokemon.name} pokemon={pokemon}/>\r\n\r\n          )\r\n        })\r\n      }\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default Home;","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\Screens\\details.js",["44","45"],"C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\global\\globalState.js",["46","47"],"import React, { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport GlobalStateContext from \"./globalStateContext\"\r\n\r\nfunction GlobalState(props) {\r\n\r\n\r\n    const [linkToGetDetails,setLinkToGetDetails] = useState(\"\")\r\n    const [listaPokemon,setListaPokemon] = useState([])\r\n    const [listPokedex,setListPokedex] = useState([])\r\n\r\n    const states = {listaPokemon,listPokedex,linkToGetDetails}\r\n    const setters = {setListaPokemon,setListPokedex,setLinkToGetDetails}\r\n    const data = {states,setters}\r\n    \r\n  return(\r\n      <GlobalStateContext.Provider value={data}>\r\n            {props.children}\r\n      </GlobalStateContext.Provider>\r\n  )\r\n}\r\n\r\nexport default GlobalState","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\componentes\\cardComponent.js",["48","49","50","51","52"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PetsIcon from '@material-ui/icons/Pets';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport CardComponentCSS from './cardComponent.css';\r\nimport axios from 'axios'\r\nimport { Route,useHistory } from 'react-router-dom';\r\nimport GlobalStateContext from \"../global/globalStateContext\"\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'grid',\r\n    grid: \"auto/repeat(auto-fit, minmax(250px, 400px))\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  root: {\r\n    margin: \"30px\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 10,\r\n  },\r\n  circle: {\r\n    borderRadius: \"50%\",\r\n    position: \"relative\",\r\n    background: \"linear-gradient(orangered 39%, #353535 20%, white 55%)\",\r\n    border: \"3px solid #353535\"\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  arrows: {\r\n    fontSize: \"3.5em\"\r\n  },\r\n  arrowLeft: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translate(0, -50%)\",\r\n    color: \"#353535\",\r\n    fontSize: \"4em\",\r\n    transition: \".25s linear\"\r\n  },\r\n  especie: {\r\n    margin: \"0 0 0 auto\",\r\n    display: \"block\",\r\n    width: \"fit-content\",\r\n  },\r\n  arrowRight: {\r\n    top: \"50%\",\r\n    position: \"absolute\",\r\n    transform: \"translate(0, -50%)\",\r\n    right: \"0\",\r\n    color: \"#353535\",\r\n    fontSize: \"4rem\",\r\n    transition: \".25s linear\"\r\n  },\r\n  name: {\r\n    top: \"40px\",\r\n    position: \"relative\",\r\n    color: \"white\",\r\n    background: \"#000000a6\",\r\n    width: \"fit-content\",\r\n    margin: \"auto\",\r\n    borderRadius: \"10px\",\r\n    padding: \"5px\",\r\n  },\r\n  info: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  viewMore: {\r\n    color: \"white\",\r\n    bottom: \"90px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    maxWidth: \"100px\",\r\n    background: \"orangered\",\r\n    borderRadius: \"20px\",\r\n    justifyContent: \"center\",\r\n    boxShadow: \"6px 3px 12px -3px black\",\r\n    transition: \".25s linear\"\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  }\r\n});\r\n\r\nfunction CardComponent(props) {\r\n  const history = useHistory()\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>â€¢</span>;\r\n\r\n  const [pokemonImage, setPokemonImage] = useState('')\r\n  const {states, setters} = useContext(GlobalStateContext)\r\n\r\n  const goToDetails = (link) =>{\r\n    setters.setLinkToGetDetails(link)\r\n     history.push('/details')\r\n  }\r\n\r\n  const addToPokedex = (itemToMove) => {\r\n    let newPokedex = [...states.listPokedex]\r\n    newPokedex.push({...itemToMove})\r\n\r\n    const index = states.listaPokemon.findIndex((pokemon) => pokemon === itemToMove)\r\n    let newList = [...states.listaPokemon]\r\n    newList.splice(index,1)\r\n\r\n    setters.setListPokedex(newPokedex)\r\n    setters.setListaPokemon(newList)\r\n    window.alert(`Adicionado ${itemToMove.name} na Pokedex`)\r\n  }\r\n  \r\n  const removeFromPokedex = (itemToMove) => {\r\n    let newList = [...states.listaPokemon]\r\n    newList.push({...itemToMove})\r\n\r\n    const index = states.listPokedex.findIndex((pokemon) => pokemon === itemToMove)\r\n    let newPokedex = [...states.listPokedex]\r\n    newPokedex.splice(index,1)\r\n\r\n    setters.setListPokedex(newPokedex)\r\n    setters.setListaPokemon(newList)\r\n    window.alert(`Removido ${itemToMove.name} da Pokedex`)\r\n  }\r\n\r\n  useEffect(()=>{\r\n  \r\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${props.name}`)\r\n    .then((res)=>{\r\n      setPokemonImage(res.data.sprites.front_default)\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n\r\n  },[])\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className={classes.info}>\r\n          <div>\r\n            <EcoIcon />\r\n            <span>Lightning</span>\r\n          </div>\r\n\r\n          <div className={classes.especie} >\r\n            <PetsIcon />\r\n            <span>Pikachus</span>\r\n          </div>\r\n        </div>\r\n        <div className={classes.circle}>\r\n\r\n        <Typography className={classes.name} variant=\"h5\" component=\"h2\">\r\n          {props.name}\r\n        </Typography>\r\n          <KeyboardArrowLeftIcon className={classes.arrowLeft} />\r\n          <img className={classes.img} src={pokemonImage} />\r\n          <KeyboardArrowRightIcon className={classes.arrowRight} />\r\n        {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Charizard\r\n        </Typography> */}\r\n        {/* <Typography className={classes.pos} color=\"textSecondary\">\r\n          Water\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography> */}\r\n        </div>\r\n\r\n        <CardActions className={classes.viewMore}>\r\n\r\n          <Button onClick={()=>goToDetails(props.url)} size=\"small\">Ver Detalhes</Button>\r\n          <Route exact path='/'>\r\n              <Button onClick={()=>addToPokedex(props.pokemon)} size=\"small\">Adicionar na Pokedex</Button>\r\n            </Route>\r\n          <Route exact path='/pokedex'>\r\n              <Button onClick={()=>removeFromPokedex(props.pokemon)} size=\"small\">Remover da Pokedex</Button>\r\n          </Route>\r\n\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n    {/* <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          be{bull}nev{bull}o{bull}lent\r\n        </Typography>\r\n\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          adjective\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={CardComponentCSS.div}>\r\n        <Button className={classes.button} size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardComponent;","C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\componentes\\Header\\Header.js",["53"],"C:\\Users\\rafin\\desktop\\pokedex\\dumont-pokedex5\\pokedex\\src\\Screens\\pokedex.js",["54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":9,"column":8,"nodeType":"61","messageId":"62","endLine":9,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":10,"column":8,"nodeType":"61","messageId":"62","endLine":10,"endColumn":13},{"ruleId":"59","severity":1,"message":"64","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":17,"column":5,"nodeType":"67","endLine":17,"endColumn":7,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"69","line":71,"column":19,"nodeType":"61","messageId":"62","endLine":71,"endColumn":26},{"ruleId":"65","severity":1,"message":"70","line":83,"column":6,"nodeType":"67","endLine":83,"endColumn":8,"suggestions":"71"},{"ruleId":"59","severity":1,"message":"72","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"73","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"59","severity":1,"message":"74","line":12,"column":8,"nodeType":"61","messageId":"62","endLine":12,"endColumn":24},{"ruleId":"59","severity":1,"message":"75","line":105,"column":9,"nodeType":"61","messageId":"62","endLine":105,"endColumn":14},{"ruleId":"59","severity":1,"message":"76","line":107,"column":9,"nodeType":"61","messageId":"62","endLine":107,"endColumn":13},{"ruleId":"65","severity":1,"message":"77","line":153,"column":5,"nodeType":"67","endLine":153,"endColumn":7,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":176,"column":11,"nodeType":"81","endLine":176,"endColumn":61},{"ruleId":"59","severity":1,"message":"82","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":22},{"ruleId":"59","severity":1,"message":"69","line":7,"column":18,"nodeType":"61","messageId":"62","endLine":7,"endColumn":25},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setters' and 'states.listPokedex.length'. Either include them or remove the dependency array.","ArrayExpression",["85"],"'setters' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'states.linkToGetDetails'. Either include it or remove the dependency array.",["86"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'CardComponentCSS' is defined but never used.","'theme' is assigned a value but never used.","'bull' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.name'. Either include it or remove the dependency array.",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PinDropSharp' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [setters, states.listPokedex.length]",{"range":"94","text":"95"},"Update the dependencies array to be: [states.linkToGetDetails]",{"range":"96","text":"97"},"Update the dependencies array to be: [props.name]",{"range":"98","text":"99"},[557,559],"[setters, states.listPokedex.length]",[1581,1583],"[states.linkToGetDetails]",[4137,4139],"[props.name]"]